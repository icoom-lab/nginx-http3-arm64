name: Docker Image CI

on:
  workflow_dispatch:

jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: arch64
    steps:
      - uses: actions/checkout@v2.1.0

      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: bullseye

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}
          
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}:/artifacts"
            
          # The shell to run commands with in the container
          shell: /bin/sh
          
          install: |
            apt update -y

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            set -e
            export APT_LISTCHANGES_FRONTEND=none
            export DEBIAN_FRONTEND=noninteractive
            cd /artifacts/
            
            echo Install dependencies.
            apt-get update -y
            apt-get install --allow-change-held-packages --allow-downgrades --allow-remove-essential -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold -fy wget
            wget -O /etc/apt/trusted.gpg.d/nginx_signing.asc https://nginx.org/keys/nginx_signing.key
            echo 'deb https://deb.debian.org/debian bullseye main contrib non-free\ndeb https://deb.debian.org/debian-security bullseye-security main contrib non-free\ndeb https://deb.debian.org/debian bullseye-updates main contrib non-free\ndeb-src https://nginx.org/packages/mainline/debian bullseye nginx' > /etc/apt/sources.list
            echo 'Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 900' > /etc/apt/preferences.d/99nginx
            apt-get update -y
            apt-get dist-upgrade --allow-change-held-packages --allow-downgrades --allow-remove-essential -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold -fy
            apt-get install --allow-change-held-packages --allow-downgrades --allow-remove-essential -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold -fy cmake curl git golang libmaxminddb-dev mercurial ninja-build rsync zlib1g-dev

            echo "Fetch nginx and nginx-quic source code"
            apt-get source nginx
            mv nginx-* nginx
            hg clone -b quic https://hg.nginx.org/nginx-quic 
            rsync -r nginx-quic/ nginx
            cd nginx
            curl -s https://raw.githubusercontent.com/kn007/patch/master/Enable_BoringSSL_OCSP.patch | patch -p1

      - name: Show the artifact
        run: |
          ls -la
          
